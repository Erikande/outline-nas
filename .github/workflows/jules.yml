name: Jules Checks
on:
  pull_request:
    types: [opened, synchronize, edited, reopened]
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

jobs:
  jules:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR head
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          fetch-depth: 0

      - name: Summarize PR diff
        run: |
          echo "PR #${{ github.event.number }}" > jules_summary.txt
          echo "Base: ${{ github.event.pull_request.base.sha || 'N/A' }}" >> jules_summary.txt
          echo "Head: ${{ github.event.pull_request.head.sha || github.sha }}" >> jules_summary.txt
          echo "" >> jules_summary.txt
          echo "Changed files:" >> jules_summary.txt
          if [ -n "${{ github.event.pull_request.base.sha || '' }}" ]; then
            git diff --name-status ${{ github.event.pull_request.base.sha }}...${{ github.event.pull_request.head.sha }} >> jules_summary.txt
          else
            git ls-files >> jules_summary.txt
          fi

      - name: Optional local verify (no-secrets env)
        run: |
          # If verify exists, fabricate a CI-only .env from the example so compose & HTTP probe can run
          if [ -x scripts/verify-dev.sh ]; then
            [ -f .env ] || cp .env.example .env || echo "No .env.example; continuing"
            COMPOSE_FILE=${COMPOSE_FILE:-docker-compose-outline.yml} \
            ENV_FILE=${ENV_FILE:-.env} \
            APP_URL=${APP_URL:-http://localhost:3000} \
            bash scripts/verify-dev.sh || true
          else
            echo "No scripts/verify-dev.sh; skipping"
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: jules-pr-${{ github.event.number || 'manual' }}
          path: |
            jules_summary.txt

      - name: Comment summary on PR
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const body = fs.readFileSync('jules_summary.txt', 'utf8');
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: "### Jules summary\n```\n" + body + "\n```"
            });
